[{"E:\\full-stack-react-todo-app\\todo-app\\src\\index.js":"1","E:\\full-stack-react-todo-app\\todo-app\\src\\reportWebVitals.js":"2","E:\\full-stack-react-todo-app\\todo-app\\src\\App.js":"3","E:\\full-stack-react-todo-app\\todo-app\\src\\components\\learning_examples\\FirstComponent.jsx":"4","E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\TodoApp.jsx":"5","E:\\full-stack-react-todo-app\\todo-app\\src\\components\\learning_examples\\SecondComponent.jsx":"6","E:\\full-stack-react-todo-app\\todo-app\\src\\components\\learning_examples\\ThirdComponent.jsx":"7","E:\\full-stack-react-todo-app\\todo-app\\src\\components\\counter\\counter.jsx":"8","E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\ErrorComponent.jsx":"9","E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\LoginComponent.jsx":"10","E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\Header.jsx":"11","E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\Footer.jsx":"12","E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\ListTodosComponent.jsx":"13","E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\LogoutComponent.jsx":"14","E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\WelcomeComponent.jsx":"15","E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\AuthenticationService.js":"16","E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\AuthenticatedRoute.jsx":"17","E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\UpdateComponent.jsx":"18","E:\\full-stack-react-todo-app\\todo-app\\src\\api\\todo\\helloWorldService.js":"19","E:\\full-stack-react-todo-app\\todo-app\\src\\api\\todo\\TodoDataService.js":"20","E:\\full-stack-react-todo-app\\todo-app\\src\\Constant.js":"21"},{"size":500,"mtime":499162500000,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":927,"mtime":1636038453540,"results":"25","hashOfConfig":"23"},{"size":260,"mtime":1609875162732,"results":"26","hashOfConfig":"23"},{"size":1615,"mtime":1613134340194,"results":"27","hashOfConfig":"23"},{"size":244,"mtime":1609875182606,"results":"28","hashOfConfig":"23"},{"size":172,"mtime":1609875300000,"results":"29","hashOfConfig":"23"},{"size":3551,"mtime":1612722961632,"results":"30","hashOfConfig":"23"},{"size":152,"mtime":1612722896179,"results":"31","hashOfConfig":"23"},{"size":4060,"mtime":1613235158414,"results":"32","hashOfConfig":"23"},{"size":1283,"mtime":1613134313016,"results":"33","hashOfConfig":"23"},{"size":316,"mtime":1612707207294,"results":"34","hashOfConfig":"23"},{"size":4056,"mtime":1613148367056,"results":"35","hashOfConfig":"23"},{"size":385,"mtime":1612707533697,"results":"36","hashOfConfig":"23"},{"size":2373,"mtime":1613156390675,"results":"37","hashOfConfig":"23"},{"size":2160,"mtime":1613236065568,"results":"38","hashOfConfig":"23"},{"size":476,"mtime":1612707718740,"results":"39","hashOfConfig":"23"},{"size":3899,"mtime":1613244600048,"results":"40","hashOfConfig":"23"},{"size":736,"mtime":1613216015795,"results":"41","hashOfConfig":"23"},{"size":733,"mtime":1613243935697,"results":"42","hashOfConfig":"23"},{"size":104,"mtime":1613242108322,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1tfbjk6",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"E:\\full-stack-react-todo-app\\todo-app\\src\\index.js",[],["92","93"],"E:\\full-stack-react-todo-app\\todo-app\\src\\reportWebVitals.js",[],"E:\\full-stack-react-todo-app\\todo-app\\src\\App.js",["94","95","96"],"E:\\full-stack-react-todo-app\\todo-app\\src\\components\\learning_examples\\FirstComponent.jsx",[],"E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\TodoApp.jsx",[],"E:\\full-stack-react-todo-app\\todo-app\\src\\components\\learning_examples\\SecondComponent.jsx",[],"E:\\full-stack-react-todo-app\\todo-app\\src\\components\\learning_examples\\ThirdComponent.jsx",[],"E:\\full-stack-react-todo-app\\todo-app\\src\\components\\counter\\counter.jsx",[],"E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\ErrorComponent.jsx",[],"E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\LoginComponent.jsx",["97"],"import React, { Component } from 'react';\r\nimport  AuthenticationService from './AuthenticationService.js'\r\n\r\nclass LoginComponent extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username : 'Ace',\r\n            password : '',\r\n            hasLoginFailed : false,\r\n            showSuccessMessage : false\r\n        }\r\n\r\n        //this.handleUserNameChange = this.handleUserNameChange.bind(this)    \r\n        //this.handlePasswordChange = this.handlePasswordChange.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.loginClicked = this.loginClicked.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        //console.log(event.target.value);\r\n        //controlled Component\r\n        this.setState(\r\n            {\r\n                [event.target.name] : event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    loginClicked() {\r\n        /*//this can be done at backend\r\n        if(this.state.username === 'Ace' && this.state.password === 'dummy'){\r\n            AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password)\r\n            this.props.history.push(`/welcome/${this.state.username}`)\r\n            //this.setState({showSuccessMessage : true})\r\n            //this.setState({hasLoginFailed : false})\r\n        }           \r\n        else\r\n        {\r\n            this.setState({showSuccessMessage : false})\r\n            this.setState({hasLoginFailed : true})\r\n        }           \r\n        //console.log(this.state)*/\r\n\r\n        /*AuthenticationService.executeBasicAuthenticationService(this.state.username,this.state.password)\r\n        .then(\r\n            () =>  {\r\n                AuthenticationService.registerSuccessfullLogin(this.state.username,this.state.password)\r\n                this.props.history.push(`/welcome/${this.state.username}`)\r\n            }\r\n        ).catch( () => {\r\n            this.setState({showSuccessMessage : false})\r\n            this.setState({hasLoginFailed : true})\r\n        }\r\n        )*/\r\n\r\n        AuthenticationService.executeJwtAuthenticationService(this.state.username,this.state.password)\r\n        .then((response) =>  {\r\n                AuthenticationService.registerJwtSuccessfullLogin(this.state.username,response.data.token)\r\n                this.props.history.push(`/welcome/${this.state.username}`)\r\n            }\r\n        ).catch( () => {\r\n            this.setState({showSuccessMessage : false})\r\n            this.setState({hasLoginFailed : true})\r\n        }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"LoginComponent\">\r\n            <h1>Login</h1>\r\n                <div className=\"container\">\r\n                    {/*<ShowInvalidCredentials hasLoginFailed = {this.state.hasLoginFailed}/>*/}\r\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\r\n                    {/*{this.state.showSuccessMessage && <div>Login SuccessFul</div>}*/}\r\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\r\n                    Password: <input type=\"password\" name=\"password\" onChange={this.handleChange}/>\r\n                    <button className = \"btn \"onClick={this.loginClicked}>Login</button>\r\n                </div>\r\n            </div>          \r\n        );\r\n    }\r\n\r\n    /*handleUserNameChange(event) {\r\n        //console.log(event.target.value);\r\n        //controlled Component\r\n        this.setState(\r\n            {\r\n                username : event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    handlePasswordChange(event) {\r\n        //console.log(event.target.value);\r\n        this.setState(\r\n            {\r\n                password : event.target.value\r\n            }\r\n        )\r\n    }*/\r\n\r\n    \r\n}\r\n\r\nfunction ShowInvalidCredentials(props) {\r\n    if(props.hasLoginFailed === true){\r\n        return <div>Invalid Credentials</div>\r\n    }else{\r\n        return <div>Login SuccessFul</div>\r\n    }\r\n\r\n}\r\n\r\nexport default LoginComponent","E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\Header.jsx",[],"E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\Footer.jsx",[],"E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\ListTodosComponent.jsx",["98","99"],"import React, { Component } from 'react';\r\nimport TodoDataService from '../../api/todo/TodoDataService.js'\r\nimport AuthenticationService from './AuthenticationService.js';\r\nimport moment from 'moment';\r\n    \r\nclass ListTodosComponent extends Component{\r\n\r\n    constructor(props){\r\n        console.log('constructor')\r\n        super(props)\r\n        this.state = {\r\n            todos : [],\r\n            message : null\r\n        }\r\n\r\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this)\r\n        this.refreshTodos = this.refreshTodos.bind(this)\r\n        this.updateTodoClicked = this.updateTodoClicked.bind(this)\r\n        this.addTodoClicked = this.addTodoClicked.bind(this)\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        console.log('componentWillUnmount')\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps,nextState)\r\n    {\r\n        console.log('shouldComponentUpdate')\r\n        console.log(nextProps)\r\n        console.log(nextState)\r\n        return true\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        if(this.state.id === -1)\r\n        {\r\n            return\r\n        }\r\n        console.log('componentDidMount')\r\n        let username = AuthenticationService.getLoggedinUserName()\r\n        TodoDataService.retrieveAllTodos(username)\r\n        .then(response => {\r\n            this.setState({\r\n                todos: response.data\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    deleteTodoClicked(id)\r\n    {\r\n        let username = AuthenticationService.getLoggedinUserName()\r\n        //console.log(username)\r\n        TodoDataService.deleteTodo(username,id)\r\n        .then(response=>{\r\n            this.setState({\r\n                message : `Delete of todo ${id} Successful` \r\n            })\r\n            this.refreshTodos();\r\n        })\r\n    }\r\n\r\n    updateTodoClicked(id)\r\n    {\r\n        let username = AuthenticationService.getLoggedinUserName()\r\n        this.props.history.push(`/todos/${id}`)\r\n    }\r\n\r\n    addTodoClicked()\r\n    {\r\n        let username = AuthenticationService.getLoggedinUserName()\r\n        this.props.history.push(`/todos/-1`)\r\n    }\r\n\r\n    refreshTodos()\r\n    {       \r\n        let username = AuthenticationService.getLoggedinUserName()\r\n        TodoDataService.retrieveAllTodos(username)\r\n        .then(response => {\r\n            this.setState({\r\n                todos: response.data\r\n            })\r\n        }) \r\n    }\r\n\r\n    render() {\r\n        console.log('render')\r\n        return(\r\n        <div>\r\n            <h1>Todos</h1>\r\n            {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n            <div className=\"container\"> \r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Description</th>\r\n                        <th>Target Date</th>\r\n                        <th>Is Completed</th>\r\n                        <th>Update</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        this.state.todos.map (\r\n                            todo =>\r\n                            <tr key ={todo.id}>\r\n                                <td>{todo.description}</td>\r\n                                <td>{moment(todo.targetDate).format('YYYY-MM-DD')}</td>\r\n                                <td>{todo.done.toString()}</td>  \r\n                                <td><button className=\"btn btn-success\" onClick={() => this.updateTodoClicked(todo.id)}>Update</button></td>  \r\n                                <td><button className=\"btn btn-warning\" onClick={() => this.deleteTodoClicked(todo.id)}>Delete</button></td>                            \r\n                            </tr>\r\n                        )\r\n                    }\r\n                </tbody>\r\n            </table>\r\n            <div className=\"row\">\r\n                <button className= \"btn btn-success\" onClick={this.addTodoClicked}>Add</button>\r\n            </div>\r\n            </div>\r\n        </div> \r\n        ) \r\n    }\r\n}\r\n\r\nexport default ListTodosComponent","E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\LogoutComponent.jsx",[],"E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\WelcomeComponent.jsx",[],"E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\AuthenticationService.js",[],"E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\AuthenticatedRoute.jsx",[],"E:\\full-stack-react-todo-app\\todo-app\\src\\components\\todo\\UpdateComponent.jsx",["100","101"],"import React, { Component, useReducer } from 'react';\r\nimport moment from 'moment';\r\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\r\nimport TodoDataService from '../../api/todo/TodoDataService'\r\nimport AuthenticationService from './AuthenticationService.js';\r\n\r\nclass UpdateComponent extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            id : this.props.match.params.id,\r\n            description : null,\r\n            targetDate : null\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        let username = AuthenticationService.isUserLoggedIn()\r\n        TodoDataService.retrieveTodo(username,this.state.id)\r\n        .then(response => {\r\n            this.setState({\r\n                description: response.data.description,\r\n                targetDate: moment(response.data.targetDate).format('YYYY-MM-DD')\r\n            })\r\n        })\r\n    }\r\n\r\n    onSubmit(values)\r\n    {\r\n        let username = AuthenticationService.getLoggedinUserName()\r\n        let todo = {\r\n            id : this.state.id,\r\n            description : values.description,\r\n            targetDate : values.targetDate\r\n        }\r\n        if(this.state.id == -1)\r\n        {\r\n            TodoDataService.createTodo(username,todo).then(() => this.props.history.push(`/todos`))\r\n        }\r\n        else{\r\n            TodoDataService.updateTodo(\r\n                username,this.state.id,todo).then(() => this.props.history.push(`/todos`))\r\n        }\r\n\r\n    }\r\n    validate(values)\r\n    {\r\n        let errors = {}\r\n        if(!values.description){\r\n            errors.description = 'Enter a descritpion'\r\n        }\r\n        else if(values.description.length < 5)\r\n        {\r\n            errors.description = 'Atleast add 5 Character in Description'\r\n        }\r\n\r\n        if(!moment(values.targetDate).isValid())\r\n        {\r\n            errors.targetDate = 'Enter a Vaild Target Date'\r\n        }\r\n\r\n        return errors\r\n    }\r\n\r\n    render(){\r\n\r\n        let {description, targetDate} = this.state\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <h1>Todo</h1>\r\n                <div className=\"container\">\r\n                     <Formik\r\n                     initialValues={{description,targetDate}}\r\n                     onSubmit = {this.onSubmit}\r\n                     validateOnChange={false}\r\n                     validateOnBlur={false}\r\n                     validate = {this.validate}\r\n                     enableReinitialize={true}\r\n                     >\r\n                        {\r\n                            (props) =>(\r\n                                <Form>\r\n                                    <ErrorMessage name=\"description\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                    <ErrorMessage name=\"targetDate\" component=\"div\" className=\"alert alert-warning\"/>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Description</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name = \"description\"></Field>\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Target Date</label>\r\n                                        <Field className=\"form-control\" type=\"date\" name = \"targetDate\"></Field>\r\n                                    </fieldset>\r\n                                    <button className=\"btn btn-primary\" type=\"submit\">Save</button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                     </Formik>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateComponent;","E:\\full-stack-react-todo-app\\todo-app\\src\\api\\todo\\helloWorldService.js",[],"E:\\full-stack-react-todo-app\\todo-app\\src\\api\\todo\\TodoDataService.js",["102"],"import axios from 'axios'\r\n\r\nimport {API_URI,JPA_API_URI} from '../../Constant.js'\r\n\r\nclass TodoDataService{\r\n\r\n    retrieveAllTodos(name)\r\n    {\r\n        return axios.get(`${JPA_API_URI}/users/${name}/todos`);\r\n    }\r\n\r\n    retrieveTodo(name,id)\r\n    {\r\n        return axios.get(`${JPA_API_URI}/users/${name}/todos/${id}`);\r\n    }\r\n\r\n    deleteTodo(name,id)\r\n    {\r\n        return axios.delete(`${JPA_API_URI}/users/${name}/todos/${id}`); \r\n    }\r\n\r\n    updateTodo(name,id,todo)\r\n    {\r\n        return axios.put(`${JPA_API_URI}/users/${name}/todos/${id}`,todo);\r\n    }\r\n\r\n    createTodo(name,todo)\r\n    {\r\n        return axios.post(`${JPA_API_URI}/users/${name}/todos/`,todo);\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default new TodoDataService()","E:\\full-stack-react-todo-app\\todo-app\\src\\Constant.js",[],["103","104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":15},{"ruleId":"109","severity":1,"message":"113","line":8,"column":8,"nodeType":"111","messageId":"112","endLine":8,"endColumn":12},{"ruleId":"109","severity":1,"message":"114","line":24,"column":7,"nodeType":"111","messageId":"112","endLine":24,"endColumn":25},{"ruleId":"109","severity":1,"message":"115","line":108,"column":10,"nodeType":"111","messageId":"112","endLine":108,"endColumn":32},{"ruleId":"109","severity":1,"message":"116","line":66,"column":13,"nodeType":"111","messageId":"112","endLine":66,"endColumn":21},{"ruleId":"109","severity":1,"message":"116","line":72,"column":13,"nodeType":"111","messageId":"112","endLine":72,"endColumn":21},{"ruleId":"109","severity":1,"message":"117","line":1,"column":28,"nodeType":"111","messageId":"112","endLine":1,"endColumn":38},{"ruleId":"118","severity":1,"message":"119","line":41,"column":26,"nodeType":"120","messageId":"121","endLine":41,"endColumn":28},{"ruleId":"109","severity":1,"message":"122","line":3,"column":9,"nodeType":"111","messageId":"112","endLine":3,"endColumn":16},{"ruleId":"105","replacedBy":"123"},{"ruleId":"107","replacedBy":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'Counter' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'LearningComponents' is defined but never used.","'ShowInvalidCredentials' is defined but never used.","'username' is assigned a value but never used.","'useReducer' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'API_URI' is defined but never used.",["125"],["126"],"no-global-assign","no-unsafe-negation"]